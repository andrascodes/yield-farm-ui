{"version":3,"sources":["theme/theme.ts","state/types.ts","state/setErrorActionHandler.ts","state/appStateReducer.ts","state/addOpportunities.ts","state/editInitialBalance.ts","state/deposit.ts","state/withdraw.ts","state/progress.ts","state/reset.ts","config/config.ts","hooks/useSnackbar.tsx","hooks/useAppState.tsx","components/Balance/Balance.tsx","components/Opportunities/OpportunityCardActions.tsx","components/Opportunities/OpportunityCard.tsx","components/Opportunities/Opportunities.tsx","components/Progress/Progress.tsx","App.tsx","hooks/useFetchOpportunities.ts","reportWebVitals.ts","index.tsx"],"names":["theme","createTheme","palette","background","default","STATE_ERRORS","setError","state","error","appStateReducer","action","type","opportunitiesMap","payload","opportunities","reduce","acc","curr","key","addOpportunitiesHandler","opportunityStates","Object","keys","length","Error","NO_RESET_AFTER_START","amount","usdcBalance","editInitialBalanceHandler","opportunityId","OPPORTUNITY_NOT_FOUND","INSUFFICIENT_FUNDS","currentOpportunityState","newDepositedAmount","newAccruedInterestAmount","depositedAmount","accruedInterestAmount","depositActionHandler","NOT_DEPOSITED","withdrawActionHandler","days","newOpportunityStatesArray","map","apy","progressActionHandler","resetActionHandler","setErrorActionHandler","initialValue","setSnackbarOpen","setSnackbarContent","SnackbarContext","React","createContext","SnackbarProvider","children","useState","snackbarOpen","snackbarContent","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","message","undefined","Provider","value","initialState","started","initialAppStateContextValue","editInitialBalance","deposit","withdraw","progress","reset","addOpportunities","AppStateContext","AppStateProvider","useReducer","dispatch","useContext","useEffect","useCallback","useAppState","Balance","Card","CardContent","Typography","variant","color","gutterBottom","TextField","label","disabled","inputProps","min","onChange","event","parseInt","target","InputProps","endAdornment","InputAdornment","position","CardActions","sx","display","alignItems","justifyContent","Button","size","onClick","DepositWithdrawButtonSwitch","handleClick","ToggleButtonGroup","exclusive","_","ToggleButton","OpportunityCardActions","totalAmountDeposited","setAmount","switchValue","setSwitchValue","handleSubmit","maxAmount","Stack","direction","spacing","max","format2DecimalPlaces","v","Math","round","toFixed","CardRow","name","Box","OpportunityCard","opportunity","opportunityState","Grid","item","minWidth","align","Opportunities","flexGrow","container","xs","CircularProgress","Progress","setDays","App","data","useFetchOpportunities","Container","maxWidth","mt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.95d8e382.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: \"#EAEEF3\",\n    },\n  },\n});\n\nexport default theme;\n","// Change if we'd rather suport BigNumber\ntype AmountType = number;\n\nexport interface OpportunityState {\n  depositedAmount: AmountType;\n  accruedInterestAmount: AmountType;\n}\nexport interface Opportunity {\n  key: string;\n  name: string;\n  apy: number;\n}\nexport type OpportunityStatesType = Record<string, OpportunityState>;\nexport type OpportunitiesType = Record<string, Opportunity>;\n\nexport interface StateType {\n  usdcBalance: AmountType;\n  started: boolean;\n  opportunities: OpportunitiesType;\n  opportunityStates: OpportunityStatesType;\n  error: Error | undefined;\n}\n\ninterface ActionType<Type extends string, Payload extends Record<string, any>> {\n  type: Type;\n  payload: Payload;\n}\n\nexport type EditInitialBalanceAction = ActionType<\n  \"editInitialBalance\",\n  { amount: AmountType }\n>;\nexport type DepositAction = ActionType<\n  \"deposit\",\n  { opportunityId: string; amount: AmountType }\n>;\nexport type WithdrawAction = ActionType<\n  \"withdraw\",\n  { opportunityId: string; amount: AmountType }\n>;\nexport type ProgressAction = ActionType<\"progress\", { days: number }>;\nexport type AddOpportunitiesAction = ActionType<\n  \"addOpportunities\",\n  { opportunities: Opportunity[] }\n>;\nexport type ResetAction = {\n  type: \"reset\";\n};\nexport type SetErrorAction = ActionType<\"setError\", { error: Error }>;\n\nexport type Action =\n  | EditInitialBalanceAction\n  | DepositAction\n  | WithdrawAction\n  | ProgressAction\n  | AddOpportunitiesAction\n  | ResetAction\n  | SetErrorAction;\n\nexport enum STATE_ERRORS {\n  OPPORTUNITY_NOT_FOUND = \"Opportunity not found\",\n  NOT_DEPOSITED = \"Can't withdraw from an opportunity where you haven't deposited\",\n  INSUFFICIENT_FUNDS = \"Insufficient funds\",\n  NO_RESET_AFTER_START = \"You need to reset before changing your USDC balance\",\n}\n","import { SetErrorAction, StateType } from \"./types\";\n\nexport function setError(state: StateType, error: Error) {\n  return {\n    ...state,\n    error,\n  };\n}\n\nexport default function setErrorActionHandler(\n  state: StateType,\n  action: SetErrorAction\n): StateType {\n  const { error } = action.payload;\n  return setError(state, error);\n}\n","import { Action, StateType } from \"./types\";\nimport addOpportunitiesHandler from \"./addOpportunities\";\nimport depositActionHandler from \"./deposit\";\nimport editInitialBalanceHandler from \"./editInitialBalance\";\nimport progressActionHandler from \"./progress\";\nimport withdrawActionHandler from \"./withdraw\";\nimport resetActionHandler from \"./reset\";\nimport setErrorActionHandler from \"./setErrorActionHandler\";\n\nexport default function appStateReducer(\n  state: StateType,\n  action: Action\n): StateType {\n  switch (action.type) {\n    case \"addOpportunities\":\n      return addOpportunitiesHandler(state, action);\n    case \"editInitialBalance\":\n      return editInitialBalanceHandler(state, action);\n    case \"deposit\":\n      return depositActionHandler(state, action);\n    case \"withdraw\":\n      return withdrawActionHandler(state, action);\n    case \"progress\":\n      return progressActionHandler(state, action);\n    case \"reset\":\n      return resetActionHandler(state);\n    case \"setError\":\n      return setErrorActionHandler(state, action);\n    default:\n      return state;\n  }\n}\n","import { AddOpportunitiesAction, OpportunitiesType, StateType } from \"./types\";\n\nexport default function addOpportunitiesHandler(\n  state: StateType,\n  action: AddOpportunitiesAction\n): StateType {\n  const { opportunities } = action.payload;\n  const opportunitiesMap = opportunities.reduce<OpportunitiesType>(\n    (acc, curr) => {\n      acc[curr.key] = curr;\n      return acc;\n    },\n    {}\n  );\n\n  return {\n    ...state,\n    opportunities: opportunitiesMap,\n  };\n}\n","import { setError } from \"./setErrorActionHandler\";\nimport { EditInitialBalanceAction, StateType, STATE_ERRORS } from \"./types\";\n\nexport default function editInitialBalanceHandler(\n  state: StateType,\n  action: EditInitialBalanceAction\n): StateType {\n  const { opportunityStates } = state;\n  const started = Object.keys(opportunityStates).length > 0;\n\n  if (started) {\n    return setError(state, new Error(STATE_ERRORS.NO_RESET_AFTER_START));\n  }\n  const { amount } = action.payload;\n\n  return { ...state, usdcBalance: amount };\n}\n","import { setError } from \"./setErrorActionHandler\";\nimport { DepositAction, StateType, STATE_ERRORS } from \"./types\";\n\nexport default function depositActionHandler(\n  state: StateType,\n  action: DepositAction\n): StateType {\n  const { amount, opportunityId } = action.payload;\n  const { usdcBalance, opportunityStates, opportunities } = state;\n\n  if (!opportunities[opportunityId]) {\n    return setError(state, new Error(STATE_ERRORS.OPPORTUNITY_NOT_FOUND));\n  }\n\n  if (amount > usdcBalance) {\n    return setError(state, new Error(STATE_ERRORS.INSUFFICIENT_FUNDS));\n  }\n\n  const currentOpportunityState = opportunityStates[opportunityId];\n  let newDepositedAmount = amount;\n  let newAccruedInterestAmount = 0;\n  if (currentOpportunityState) {\n    newDepositedAmount += currentOpportunityState.depositedAmount;\n    newAccruedInterestAmount += currentOpportunityState.accruedInterestAmount;\n  }\n\n  return {\n    ...state,\n    usdcBalance: usdcBalance - amount,\n    opportunityStates: {\n      ...opportunityStates,\n      [opportunityId]: {\n        depositedAmount: newDepositedAmount,\n        accruedInterestAmount: newAccruedInterestAmount,\n      },\n    },\n  };\n}\n","import { setError } from \"./setErrorActionHandler\";\nimport { StateType, STATE_ERRORS, WithdrawAction } from \"./types\";\n\nexport default function withdrawActionHandler(\n  state: StateType,\n  action: WithdrawAction\n): StateType {\n  const { amount, opportunityId } = action.payload;\n  const { usdcBalance, opportunityStates, opportunities } = state;\n\n  if (!opportunities[opportunityId]) {\n    return setError(state, new Error(STATE_ERRORS.OPPORTUNITY_NOT_FOUND));\n  }\n\n  const currentOpportunityState = opportunityStates[opportunityId];\n  if (!currentOpportunityState) {\n    return setError(state, new Error(STATE_ERRORS.NOT_DEPOSITED));\n  }\n\n  const { depositedAmount, accruedInterestAmount } = currentOpportunityState;\n\n  if (amount > depositedAmount + accruedInterestAmount) {\n    return setError(state, new Error(STATE_ERRORS.INSUFFICIENT_FUNDS));\n  }\n\n  let newDepositedAmount = depositedAmount;\n  let newAccruedInterestAmount = accruedInterestAmount;\n  if (amount <= accruedInterestAmount) {\n    newAccruedInterestAmount -= amount;\n  } else {\n    newDepositedAmount -= amount - newAccruedInterestAmount;\n    newAccruedInterestAmount = 0;\n  }\n\n  return {\n    ...state,\n    usdcBalance: usdcBalance + amount,\n    opportunityStates: {\n      ...opportunityStates,\n      [opportunityId]: {\n        depositedAmount: newDepositedAmount,\n        accruedInterestAmount: newAccruedInterestAmount,\n      },\n    },\n  };\n}\n","import { ProgressAction, StateType, OpportunityStatesType } from \"./types\";\n\nexport default function progressActionHandler(\n  state: StateType,\n  action: ProgressAction\n): StateType {\n  const { days } = action.payload;\n  const { opportunityStates, opportunities } = state;\n\n  const newOpportunityStatesArray = Object.keys(opportunityStates).map(\n    (key) => {\n      const { depositedAmount, accruedInterestAmount } = opportunityStates[key];\n      const { apy } = opportunities[key];\n\n      const newAccruedInterestAmount =\n        accruedInterestAmount + depositedAmount * apy * (days / 365);\n\n      return {\n        key,\n        depositedAmount,\n        accruedInterestAmount: newAccruedInterestAmount,\n      };\n    }\n  );\n\n  return {\n    ...state,\n    opportunityStates: newOpportunityStatesArray.reduce<OpportunityStatesType>(\n      (acc, curr) => {\n        const { key, depositedAmount, accruedInterestAmount } = curr;\n        acc[key] = {\n          depositedAmount,\n          accruedInterestAmount,\n        };\n        return acc;\n      },\n      {}\n    ),\n  };\n}\n","import { INITIAL_BALANCE } from \"../config\";\nimport { StateType } from \"./types\";\n\nexport default function resetActionHandler(state: StateType): StateType {\n  return { ...state, usdcBalance: INITIAL_BALANCE, opportunityStates: {} };\n}\n","export const INITIAL_BALANCE = 1000;\n","import React, { useContext, useState } from \"react\";\nimport { Alert, AlertProps, Snackbar } from \"@mui/material\";\n\nexport interface SnackbarContextType {\n  setSnackbarOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setSnackbarContent: React.Dispatch<\n    React.SetStateAction<SnackbarContent | undefined>\n  >;\n}\n\nconst initialValue: SnackbarContextType = {\n  setSnackbarOpen: () => {},\n  setSnackbarContent: () => {},\n};\n\nconst SnackbarContext = React.createContext<SnackbarContextType>(initialValue);\n\nexport function useSnackbar() {\n  return useContext(SnackbarContext);\n}\n\ninterface SnackbarContent {\n  severity: AlertProps[\"severity\"];\n  message: string;\n}\n\nexport default function SnackbarProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [snackbarOpen, setSnackbarOpen] = useState<boolean>(false);\n  const [snackbarContent, setSnackbarContent] = useState<\n    SnackbarContent | undefined\n  >();\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => setSnackbarOpen(false)}\n      >\n        {snackbarContent ? (\n          <Alert severity={snackbarContent.severity}>\n            {snackbarContent.message}\n          </Alert>\n        ) : undefined}\n      </Snackbar>\n      <SnackbarContext.Provider\n        value={{\n          setSnackbarOpen,\n          setSnackbarContent,\n        }}\n      >\n        {children}\n      </SnackbarContext.Provider>\n    </>\n  );\n}\n","import React, { useCallback, useEffect, useReducer } from \"react\";\n\nimport { INITIAL_BALANCE } from \"../config\";\nimport { Opportunity, StateType } from \"../state/types\";\n\nimport appStateReducer from \"../state/appStateReducer\";\nimport { useSnackbar } from \"../hooks/useSnackbar\";\n\nexport const initialState: StateType = {\n  usdcBalance: INITIAL_BALANCE,\n  started: false,\n  opportunities: {},\n  opportunityStates: {},\n  error: undefined,\n};\n\ninterface AppStateContextValue {\n  state: StateType;\n  started: boolean;\n  editInitialBalance: (amount: number) => void;\n  deposit: (opportunityId: string, amount: number) => void;\n  withdraw: (opportunityId: string, amount: number) => void;\n  progress: (days: number) => void;\n  reset: () => void;\n  addOpportunities: (opportunities: Opportunity[]) => void;\n}\n\nconst initialAppStateContextValue = {\n  state: initialState,\n  started: false,\n  editInitialBalance: () => {},\n  deposit: () => {},\n  withdraw: () => {},\n  progress: () => {},\n  reset: () => {},\n  addOpportunities: () => {},\n};\n\nconst AppStateContext = React.createContext<AppStateContextValue>(\n  initialAppStateContextValue\n);\n\nexport default function AppStateProvider({\n  children,\n}: {\n  children: JSX.Element;\n}) {\n  const [state, dispatch] = useReducer(appStateReducer, initialState);\n  const { setSnackbarContent, setSnackbarOpen } = useSnackbar();\n\n  const { error } = state;\n\n  useEffect(() => {\n    if (error) {\n      setSnackbarContent({ severity: \"error\", message: error?.message });\n      setSnackbarOpen(true);\n    } else {\n      setSnackbarContent(undefined);\n      setSnackbarOpen(false);\n    }\n  }, [error, setSnackbarContent, setSnackbarOpen]);\n\n  const editInitialBalance = useCallback(\n    (amount: number) => {\n      dispatch({ type: \"editInitialBalance\", payload: { amount } });\n    },\n    [dispatch]\n  );\n\n  const deposit = useCallback(\n    (opportunityId: string, amount: number) => {\n      dispatch({ type: \"deposit\", payload: { opportunityId, amount } });\n    },\n    [dispatch]\n  );\n\n  const withdraw = useCallback(\n    (opportunityId: string, amount: number) => {\n      dispatch({ type: \"withdraw\", payload: { opportunityId, amount } });\n    },\n    [dispatch]\n  );\n\n  const progress = useCallback(\n    (days: number) => {\n      dispatch({ type: \"progress\", payload: { days } });\n      setSnackbarContent({\n        severity: \"info\",\n        message: `Progressed by ${days} days`,\n      });\n      setSnackbarOpen(true);\n    },\n    [dispatch, setSnackbarContent, setSnackbarOpen]\n  );\n\n  const reset = useCallback(() => {\n    dispatch({ type: \"reset\" });\n    setSnackbarContent({\n      severity: \"info\",\n      message: \"Yield farming has reset\",\n    });\n    setSnackbarOpen(true);\n  }, [dispatch, setSnackbarContent, setSnackbarOpen]);\n\n  const addOpportunities = useCallback(\n    (opportunities: Opportunity[]) => {\n      dispatch({ type: \"addOpportunities\", payload: { opportunities } });\n    },\n    [dispatch]\n  );\n\n  const setError = useCallback(\n    (error: Error) => {\n      dispatch({ type: \"setError\", payload: { error } });\n    },\n    [dispatch]\n  );\n\n  const started = Object.keys(state.opportunityStates).length > 0;\n\n  const value = {\n    state,\n    started,\n    editInitialBalance,\n    deposit,\n    withdraw,\n    progress,\n    reset,\n    addOpportunities,\n    setError,\n  };\n\n  return (\n    <AppStateContext.Provider value={value}>\n      {children}\n    </AppStateContext.Provider>\n  );\n}\n\nexport function useAppState() {\n  return React.useContext(AppStateContext);\n}\n","import {\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  CardActions,\n  InputAdornment,\n} from \"@mui/material\";\nimport { ChangeEvent } from \"react\";\nimport { useAppState } from \"../../hooks/useAppState\";\n\nexport default function Balance() {\n  const {\n    state: { usdcBalance },\n    started,\n    editInitialBalance,\n    reset,\n  } = useAppState();\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const amount = parseInt(event.target.value);\n    if (!amount) {\n      return editInitialBalance(0);\n    }\n    editInitialBalance(amount);\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\n          USDC Balance\n        </Typography>\n        <TextField\n          label=\"Amount\"\n          variant=\"filled\"\n          value={usdcBalance}\n          disabled={started}\n          type=\"number\"\n          inputProps={{\n            min: 0,\n          }}\n          onChange={handleChange}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">USDC</InputAdornment>,\n          }}\n        />\n      </CardContent>\n      <CardActions\n        sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n      >\n        <Button size=\"small\" onClick={reset}>\n          Reset\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import {\n  Button,\n  CardActions,\n  InputAdornment,\n  Stack,\n  TextField,\n  ToggleButton,\n  ToggleButtonGroup,\n} from \"@mui/material\";\nimport { ChangeEvent, useCallback, useState } from \"react\";\nimport { useAppState } from \"../../hooks/useAppState\";\nimport { Opportunity } from \"../../state/types\";\n\ntype SwitchValue = \"deposit\" | \"withdraw\";\n\nfunction DepositWithdrawButtonSwitch({\n  onClick: handleClick,\n  value,\n}: {\n  value: SwitchValue;\n  onClick: (value: SwitchValue) => void;\n}) {\n  return (\n    <ToggleButtonGroup\n      color=\"primary\"\n      value={value}\n      exclusive\n      onChange={(_, value) => {\n        if (value === \"deposit\") {\n          handleClick(\"deposit\");\n        } else if (value === \"withdraw\") {\n          handleClick(\"withdraw\");\n        }\n      }}\n    >\n      <ToggleButton value=\"deposit\">Deposit</ToggleButton>\n      <ToggleButton value=\"withdraw\">Withdraw</ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n\nexport default function OpportunityCardActions({\n  opportunityId,\n  totalAmountDeposited,\n}: {\n  totalAmountDeposited: number;\n  opportunityId: Opportunity[\"key\"];\n}) {\n  const {\n    deposit,\n    withdraw,\n    state: { usdcBalance },\n  } = useAppState();\n\n  const [amount, setAmount] = useState<number>(0);\n\n  const [switchValue, setSwitchValue] = useState<SwitchValue>(\"deposit\");\n\n  const handleSubmit = useCallback(() => {\n    switch (switchValue) {\n      case \"deposit\":\n        deposit(opportunityId, amount);\n        break;\n      case \"withdraw\":\n        withdraw(opportunityId, amount);\n        break;\n      default:\n        break;\n    }\n    setAmount(0);\n  }, [switchValue, amount, opportunityId, deposit, withdraw]);\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const amount = parseInt(event.target.value);\n    if (!amount) {\n      return setAmount(0);\n    }\n    setAmount(amount);\n  };\n\n  const maxAmount =\n    switchValue === \"deposit\" ? usdcBalance : totalAmountDeposited;\n\n  return (\n    <CardActions sx={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Stack direction=\"column\" spacing={2}>\n        <DepositWithdrawButtonSwitch\n          value={switchValue}\n          onClick={setSwitchValue}\n        />\n        <TextField\n          label=\"Amount\"\n          variant=\"filled\"\n          value={amount}\n          type=\"number\"\n          inputProps={{\n            min: 0,\n            max: maxAmount,\n          }}\n          onChange={handleChange}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">USDC</InputAdornment>,\n          }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n          Confirm\n        </Button>\n      </Stack>\n    </CardActions>\n  );\n}\n","import { Box, Card, CardContent, Grid, Stack, Typography } from \"@mui/material\";\nimport { Opportunity, OpportunityState } from \"../../state/types\";\nimport OpportunityCardActions from \"./OpportunityCardActions\";\n\nconst format2DecimalPlaces = (v: number) =>\n  (Math.round(v * 100) / 100).toFixed(2);\n\nfunction CardRow({ name, value }: { name: string; value: string }) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Typography>{name}</Typography>\n      <Typography>{value}</Typography>\n    </Box>\n  );\n}\n\nexport default function OpportunityCard({\n  opportunity,\n  opportunityState,\n}: {\n  opportunity: Opportunity;\n  opportunityState?: OpportunityState;\n}) {\n  const { name, apy, key } = opportunity;\n\n  const depositedAmount = opportunityState\n    ? opportunityState.depositedAmount\n    : 0;\n  const accruedInterestAmount = opportunityState\n    ? opportunityState.accruedInterestAmount\n    : 0;\n\n  return (\n    <Grid item>\n      <Card sx={{ minWidth: \"300px\" }}>\n        <CardContent>\n          <Typography variant=\"h6\" align=\"center\">\n            {name}\n          </Typography>\n          <Stack direction=\"column\" spacing={1}>\n            <CardRow name=\"Current APY:\" value={`${apy * 100}%`} />\n            <CardRow\n              name=\"Amount Deposited:\"\n              value={`${format2DecimalPlaces(depositedAmount)} USDC`}\n            />\n            <CardRow\n              name=\"Accrued Interest:\"\n              value={`${format2DecimalPlaces(accruedInterestAmount)} USDC`}\n            />\n          </Stack>\n        </CardContent>\n        <OpportunityCardActions\n          opportunityId={key}\n          totalAmountDeposited={depositedAmount + accruedInterestAmount}\n        />\n      </Card>\n    </Grid>\n  );\n}\n","import { CircularProgress, Grid } from \"@mui/material\";\nimport { useAppState } from \"../../hooks/useAppState\";\nimport OpportunityCard from \"./OpportunityCard\";\n\nexport default function Opportunities() {\n  const {\n    state: { opportunities, opportunityStates },\n  } = useAppState();\n\n  if (!opportunities) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\" spacing={3}>\n          {Object.keys(opportunities).map((key) => (\n            <OpportunityCard\n              key={key}\n              opportunity={opportunities[key]}\n              opportunityState={opportunityStates[key]}\n            />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import {\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  CardActions,\n  InputAdornment,\n} from \"@mui/material\";\nimport { ChangeEvent, useState } from \"react\";\nimport { useAppState } from \"../../hooks/useAppState\";\n\nexport default function Progress() {\n  const { progress, started } = useAppState();\n\n  const [days, setDays] = useState<number>(0);\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const amount = parseInt(event.target.value);\n    if (!amount) {\n      return setDays(0);\n    }\n    setDays(amount);\n  };\n\n  const handleSubmit = () => {\n    progress(days);\n    setDays(0);\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\n          Progress by\n        </Typography>\n        <TextField\n          label=\"Days\"\n          variant=\"filled\"\n          value={days}\n          disabled={!started}\n          type=\"number\"\n          inputProps={{\n            min: 0,\n          }}\n          onChange={handleChange}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">days</InputAdornment>,\n          }}\n        />\n      </CardContent>\n      <CardActions\n        sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n      >\n        <Button size=\"small\" onClick={handleSubmit}>\n          Go\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import { Container, Stack, Box } from \"@mui/material\";\n\nimport useFetchOpportunities from \"./hooks/useFetchOpportunities\";\n\nimport Balance from \"./components/Balance\";\nimport Opportunities from \"./components/Opportunities\";\nimport Progress from \"./components/Progress\";\n\nfunction App() {\n  useFetchOpportunities();\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 2 }}>\n      <Stack direction=\"column\" spacing={3}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Balance />\n          <Progress />\n        </Box>\n        <Opportunities />\n      </Stack>\n    </Container>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\n\nimport { useAppState } from \"./useAppState\";\n\nimport opportunities from \"../config/opportunities.json\";\n\nexport default function useFetchOpportunities() {\n  const { addOpportunities } = useAppState();\n\n  useEffect(() => {\n    addOpportunities(opportunities.data);\n  }, [addOpportunities]);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport theme from \"./theme\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppStateProvider from \"./hooks/useAppState\";\nimport SnackbarProvider from \"./hooks/useSnackbar\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SnackbarProvider>\n        <AppStateProvider>\n          <App />\n        </AppStateProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}